{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","changeGood","good","setState","clearGood","this","className","type","onClick","map","isGoodSelected","classNames","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"oQAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,UAAY,WACV,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WACE,IAAQA,EAAiBK,KAAKN,MAAtBC,aACAI,EAA0BC,KAA1BD,UAAWH,EAAeI,KAAfJ,WAEnB,OACE,uBAAMK,UAAU,oBAAhB,UACGN,EAEG,qBAAIM,UAAU,sCAAd,oBACMN,EADN,gBAEE,wBACE,UAAQ,cACRO,KAAK,SACLD,UAAU,cACVE,QAASJ,EACT,aAAW,oBAIf,oBAAIE,UAAU,QAAd,+BAEJ,uBAAOA,UAAU,QAAjB,SACE,gCACGT,EAAMY,KAAI,SAACP,GACV,IAAMQ,EAAiBR,IAASF,EAEhC,OACE,qBACE,UAAQ,OAERM,UAAWK,IAAW,CACpB,+BAAgCD,IAJpC,UAOE,6BACIA,EAaE,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAASJ,EACT,aAAW,qBALb,eAXA,wBACE,UAAQ,YACRG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAMP,EAAWC,IAC1B,aAAW,kBALb,iBAuBN,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MAhCEA,iBA1CvB,GAAyBU,IAAMC,eCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bb63e7c5.chunk.js","sourcesContent":["import React from 'react';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  changeGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  clearGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const { clearGood, changeGood } = this;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={clearGood}\n                aria-label=\"Clear button\"\n              />\n            </h1>\n          )\n          : <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const isGoodSelected = good === selectedGood;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames({\n                    'has-background-success-light': isGoodSelected,\n                  })}\n                >\n                  <td>\n                    {!isGoodSelected\n                      ? (\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => changeGood(good)}\n                          aria-label=\"Add good button\"\n                        >\n                          +\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={clearGood}\n                          aria-label=\"Remove good button\"\n                        >\n                          -\n                        </button>\n                      )}\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}